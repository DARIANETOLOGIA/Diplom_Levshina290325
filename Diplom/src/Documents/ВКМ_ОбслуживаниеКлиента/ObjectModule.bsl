//{Левшина ВКМ_Диплом
#Область ОписаниеПеременных
 
Перем ДатаДокумента; 
Перем СотрудникПредыдущий;
Перем НомерДокумента; 

#КонецОбласти 
 
#Область ОбработчикиСобытий 

Процедура ОбработкаПроведения(Отказ,Режим)
	
	ВыполненныеКлиентуРаботы();	
	ВыполненныеСотрудникомРаботы();
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Перем ОбщегоНазначения;
	Если Договор.ВидДоговора <> Перечисления.ВидыДоговоровКонтрагентов.АбонентскоеОбслуживание Тогда
		
		Отказ = Истина;
		ОбщегоНазначения.СообщитьПользователю("Выбранный договор не является типом: Абонентское обслуживание");
		
	КонецЕсли;
	
	
	Если Договор.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.АбонентскоеОбслуживание Тогда
		
		Если Не (Дата >= Договор.ВКМ_НачалоДействияДоговора И Дата <= Договор.ВКМ_ОкончаниеДействияДоговора) Тогда
			
			Отказ = Истина;
			ОбщегоНазначения.СообщитьПользователю("Дата документа не попадает в рамки выбранного договора");
			
		КонецЕсли;
	КонецЕсли;	
	
КонецПроцедуры

Процедура ВыполненныеСотрудникомРаботы()
	
	ПроцентОтРабот = РегистрыСведений.ВКМ_УсловияОплатыСотрудников.УсловияОплатыСотрудников(Сотрудник, Дата); 
	
	// регистр ВКМ_ВыполненныеСотрудникомРаботы
	Движения.ВКМ_ВыполненныеСотрудникомРаботы.Записывать = Истина; 
	Движения.ВКМ_ВыполненныеСотрудникомРаботы.Записать();
	
	Для Каждого Строка Из ВыполненныеРаботы Цикл
		Движение = Движения.ВКМ_ВыполненныеСотрудникомРаботы.Добавить();
		Движение.Период = Дата;
		Движение.Сотрудник = Сотрудник;
		Движение.ЧасовКОплате = Строка.ЧасыКОплатеКлиенту;
		Движение.СуммаКОплате = Движение.ЧасовКОплате * Договор.ВКМ_СтоимостьЧасаРаботы * ПроцентОтРабот/100;
		
	КонецЦикла;
	
	//формула расчета суммы
	//ЧасовКОплатеКлиенту * СтавкаЧасаКлиента * ПроцентОтРабот / 100	
	
КонецПроцедуры

Процедура ВыполненныеКлиентуРаботы()
	
	
	// регистр ВКМ_ВыполненныеКлиентуРаботы  
	
	Движения.ВКМ_ВыполненныеКлиентуРаботы.Записывать = Истина;
	Движения.ВКМ_ВыполненныеКлиентуРаботы.Записать();
	
	Для Каждого Строка Из ВыполненныеРаботы Цикл 
		
		Движение = Движения.ВКМ_ВыполненныеКлиентуРаботы.Добавить();
		
		Движение.Период = Дата;
		Движение.Клиент = Клиент;
		Движение.Договор = Договор;	
		Движение.КоличествоЧасов = Строка.ЧасыКОплатеКлиенту;
		Движение.СуммаКОплате = Договор.ВКМ_СтоимостьЧасаРаботы * Движение.КоличествоЧасов;
		
	КонецЦикла;
	Движения.ВКМ_ВыполненныеКлиентуРаботы.Записать();
	
КонецПроцедуры  

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения) 
	
	
	Если Не ЭтоНовый() Тогда 
		Запрос = Новый Запрос; 
		Запрос.Текст = "ВЫБРАТЬ
		|	ВКМ_ОбслуживаниеКлиента.Дата КАК Дата,
		|	ВКМ_ОбслуживаниеКлиента.Сотрудник КАК Сотрудник,
		|	ВКМ_ОбслуживаниеКлиента.Номер КАК Номер
		|ИЗ
		|	Документ.ВКМ_ОбслуживаниеКлиента КАК ВКМ_ОбслуживаниеКлиента
		|ГДЕ
		|	ВКМ_ОбслуживаниеКлиента.Ссылка = &Ссылка"; 
		
		Запрос.УстановитьПараметр("Ссылка", Ссылка); 
		
		Результат = Запрос.Выполнить(); 
		Выборка = Результат.Выбрать(); 
		
		Если Выборка.Следующий() Тогда 
			ДатаДокумента = Выборка.Дата; 
			СотрудникПредыдущий = Выборка.Сотрудник;
			НомерДокумента = Выборка.Номер;
		КонецЕсли; 
	КонецЕсли;  	
	
КонецПроцедуры 	
 
Процедура ПриЗаписи(Отказ) 
	
	Если ДатаДокумента <> Дата И СотрудникПредыдущий <> Сотрудник И ДатаДокумента <> Дата И СотрудникПредыдущий <> Сотрудник Тогда
		СпрОбъект = Справочники.ВКМ_Уведомления_Телеграм_Боту.СоздатьЭлемент();
		СпрОбъект.Текст_Сообщения = СтрШаблон("Создан новый документ ""Обслуживание клиента"", назначенный специалист: %1", Сотрудник);
		СпрОбъект.Записать();
			
		
	ИначеЕсли ДатаДокумента <> Дата Тогда 
		
		СпрОбъект = Справочники.ВКМ_Уведомления_Телеграм_Боту.СоздатьЭлемент();
		СпрОбъект.Текст_Сообщения = СтрШаблон("В документе ""Обслуживание клиента"" № %1, изменена дата!", НомерДокумента);
		СпрОбъект.Записать(); 		
		
	ИначеЕсли СотрудникПредыдущий <> Сотрудник Тогда 
		
		СпрОбъект = Справочники.ВКМ_Уведомления_Телеграм_Боту.СоздатьЭлемент();
		
		СпрОбъект.Текст_Сообщения = СтрШаблон("В документе ""Обслуживание клиента"" № %1, изменен специалист! Новый назначенный специалист: %2", НомерДокумента, Сотрудник);
		СпрОбъект.Записать();
		
	
	ИначеЕсли ДатаДокумента <> Дата И СотрудникПредыдущий <> Сотрудник Тогда 
		
		СпрОбъект = Справочники.ВКМ_Уведомления_Телеграм_Боту.СоздатьЭлемент();
		
		СпрОбъект.Текст_Сообщения = СтрШаблон("В документе ""Обслуживание клиента"" № %1, изменена дата и специалист! Новый назначенный специалист: %2", НомерДокумента, Сотрудник);
		СпрОбъект.Записать();
		
	КонецЕсли; 
	
	
КонецПроцедуры

#КонецОбласти 




