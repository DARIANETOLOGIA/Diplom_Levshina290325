
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании) Экспорт
	
	Если ПравоДоступа("Добавление", Метаданные.Документы.РеализацияТоваровУслуг) Тогда
		
        КомандаСоздатьНаОсновании = КомандыСозданияНаОсновании.Добавить();
        КомандаСоздатьНаОсновании.Менеджер = Метаданные.Документы.РеализацияТоваровУслуг.ПолноеИмя();
        КомандаСоздатьНаОсновании.Представление = ОбщегоНазначения.ПредставлениеОбъекта(Метаданные.Документы.РеализацияТоваровУслуг);
        КомандаСоздатьНаОсновании.РежимЗаписи = "Проводить";
		
		Возврат КомандаСоздатьНаОсновании;
		
	КонецЕсли;

	Возврат Неопределено;
	
КонецФункции

//{Levshina: Начало изменений
Процедура ПриОпределенииНастроекПечати(НастройкиОбъекта) Экспорт	
		НастройкиОбъекта.ПриДобавленииКомандПечати = Истина;
КонецПроцедуры
	
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
		
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.Идентификатор = "Акт об оказании услуг";
		КомандаПечати.Представление = НСтр("ru = 'Акт об оказании услуг'");
		КомандаПечати.Порядок = 5;
		
		
КонецПроцедуры

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
		
		ПечатнаяФорма = УправлениеПечатью.СведенияОПечатнойФорме(КоллекцияПечатныхФорм, "Акт об оказании услуг");
		Если ПечатнаяФорма <> Неопределено Тогда
			ПечатнаяФорма.ТабличныйДокумент = ПечатьАктОбОказанииУслуг(МассивОбъектов, ОбъектыПечати);
			ПечатнаяФорма.СинонимМакета = НСтр("ru = 'Акт'");
			ПечатнаяФорма.ПолныйПутьКМакету = "Документ.РеализацияТоваровУслуг.ПФ_MXL_АктОбОказанииУслуг";
		КонецЕсли; 
		
КонецПроцедуры
	
Функция ПолучитьДанныеДокументов(МассивОбъектов)
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	РеализацияТоваровУслуг.Ссылка КАК Ссылка,
		               |	РеализацияТоваровУслуг.Номер КАК Номер,
		               |	РеализацияТоваровУслуг.Дата КАК Дата,
		               |	РеализацияТоваровУслуг.Контрагент КАК Контрагент,
		               |	РеализацияТоваровУслуг.Организация КАК Организация,
		               |	РеализацияТоваровУслуг.Товары.(
		               |		НомерСтроки КАК НомерСтроки,
		               |		Номенклатура КАК Номенклатура,
		               |		Количество КАК Количество,
		               |		Цена КАК Цена,
		               |		Сумма КАК Сумма
		               |	) КАК Товары,
		               |	РеализацияТоваровУслуг.Договор КАК Договор
		               |ИЗ
		               |	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
		               |ГДЕ
		               |	РеализацияТоваровУслуг.Ссылка В(&МассивОбъектов)";
		
		
		
		Запрос.УстановитьПараметр("МассивОбъектов",МассивОбъектов);
		
		Возврат Запрос.Выполнить().Выбрать();					
		
КонецФункции 

Функция ПечатьАктОбОказанииУслуг(МассивОбъектов, ОбъектыПечати) 
		
		ТабДок = Новый ТабличныйДокумент;
		Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.РеализацияТоваровУслуг.ПФ_MXL_АктОбОказанииУслуг");
		
		ДанныеДокументов = ПолучитьДанныеДокументов(МассивОбъектов);
	
		ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
		ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
		ОбластьТоварыШапка = Макет.ПолучитьОбласть("ТоварыШапка");
		ОбластьТовары = Макет.ПолучитьОбласть("Товары");
		ОбластьСуммаПрописью = Макет.ПолучитьОбласть("СуммаПрописью");
		ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
		
		ТабДок.Очистить();
		
		ВставлятьРазделительСтраниц = Ложь;
		Пока ДанныеДокументов.Следующий() Цикл
			Если ВставлятьРазделительСтраниц Тогда
				ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли; 
			
			НомерСтрокиНачало = ТабДок.ВысотаТаблицы + 1;
			
			ОбластьЗаголовок.Параметры.Номер = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ДанныеДокументов.Номер);			
			//Дата = ДанныеДокументов.Дата;
			ОбластьЗаголовок.Параметры.Дата = Формат(ДанныеДокументов.Дата,"ДФ=dd.MM.yyyy");
			
//			ДанныеШтрихКода = ГенерацияШтрихкода.ДанныеQRКода("e1cib/data/Документ.net_Доставка?ref=bb18581cf8b1a09d11eeb1f95cf0a92e", 1, 120);
//			
//			Если НЕ ТипЗнч(ДанныеШтрихКода) = Тип("ДвоичныеДанные") Тогда
//				ТекстСообщения = НСтр("ru = 'Не удалось сформировать QR-код.
//				|Технические подробности см. в журнале регистрации.'");
//				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
//			Иначе
//				КартинкаШтрихКода = Новый Картинка(ДанныеШтрихКода);
//				ОбластьШапка.Рисунки.ШтрихКод.Картинка = КартинкаШтрихКода;
//			КонецЕсли;	
			
			
			ОбластьШапка.Параметры.Заполнить(ДанныеДокументов);
			
			
			ТабДок.Вывести(ОбластьЗаголовок);
			ТабДок.Вывести(ОбластьШапка, ДанныеДокументов.Уровень());
			ТабДок.Вывести(ОбластьТоварыШапка);
						ВыборкаТовары = ДанныеДокументов.Товары.Выбрать();
			Пока ВыборкаТовары.Следующий() Цикл
				ОбластьТовары.Параметры.Заполнить(ВыборкаТовары);
				ТабДок.Вывести(ОбластьТовары, ВыборкаТовары.Уровень());
			КонецЦикла; 
			
			
			ВыборкаСумма = ВыборкаТовары.Сумма;
			Сумма = ?(ЗначениеЗаполнено(ВыборкаСумма), ВыборкаСумма, 0);
			
						
			СуммаКПрописи = Сумма;  
			//СуммаПрописью = ЧислоПрописью(СуммаКПрописи);
			
			ФормСтрока = "Л = ru_RU; ДП = Истина";
            ПарПредмета= "рубль, рубля, рублей, м, копейка, копейки, копеек, ж, 2";
            ОбластьСуммаПрописью.Параметры.СуммаДокумента = СуммаКПрописи;
			ОбластьСуммаПрописью.Параметры.СуммаПрописью = ЧислоПрописью(СуммаКПрописи, ФормСтрока, ПарПредмета); 
			
			//ОбластьСуммаПрописью.Параметры.СуммаДокумента = ЧислоПрописью(СуммаКПрописи);
			//ОбластьСуммаПрописью.Параметры.СуммаПрописью = ЧислоПрописью(СуммаКПрописи);

			//СуммаПрописью = СтроковыеФункцииКлиентСервер.ЧислоЦифрамиПредметИсчисленияПрописью(СуммаКПрописи);

			//ИтоговаяСтрока	= НСтр("ru = 'Всего оказано услуг на сумму '") +
			//	ОбщегоНазначенияВызовСервера.ФорматСумм(СуммаКПрописи);
			//СуммаПрописью	= ОбщегоНазначенияВызовСервера.СформироватьСуммуПрописью(СуммаКПрописи);
			ТабДок.Вывести(ОбластьСуммаПрописью);

			ТабДок.Вывести(ОбластьПодвал);
			
			ВставлятьРазделительСтраниц = Истина; 
			
			// В табличном документе необходимо задать имя области, в которую был 
			// выведен объект. Нужно для возможности печати комплектов документов.
			УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДок, 
			НомерСтрокиНачало, ОбъектыПечати, ДанныеДокументов.Ссылка);		
			
		КонецЦикла; 
		
		Возврат ТабДок;
КонецФункции  
	

//}

#КонецОбласти

#КонецЕсли