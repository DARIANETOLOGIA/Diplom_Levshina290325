
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
	#Область ОбработчикиСобытий
	
	Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
		
		Ответственный = Пользователи.ТекущийПользователь();
		
		Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗаказПокупателя") Тогда
			ЗаполнитьНаОснованииЗаказаПокупателя(ДанныеЗаполнения);
		КонецЕсли;
		
	КонецПроцедуры
	
	Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
		
		Если ОбменДанными.Загрузка Тогда
			Возврат;
		КонецЕсли;
		
		СуммаДокумента = Товары.Итог("Сумма") + Услуги.Итог("Сумма");
		
	КонецПроцедуры
	
	Процедура ОбработкаПроведения(Отказ, Режим)
		
		Движения.ОбработкаЗаказов.Записывать = Истина;
		Движения.ОстаткиТоваров.Записывать = Истина;
		
		Движение = Движения.ОбработкаЗаказов.Добавить();
		Движение.Период = Дата;
		Движение.Контрагент = Контрагент;
		Движение.Договор = Договор;
		Движение.Заказ = Основание;
		Движение.СуммаОтгрузки = СуммаДокумента;
		
		Для Каждого ТекСтрокаТовары Из Товары Цикл
			Движение = Движения.ОстаткиТоваров.Добавить();
			Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
			Движение.Период = Дата;
			Движение.Контрагент = Контрагент;
			Движение.Номенклатура = ТекСтрокаТовары.Номенклатура;
			Движение.Сумма = ТекСтрокаТовары.Сумма;
			Движение.Количество = ТекСтрокаТовары.Количество;
		КонецЦикла;
		
	КонецПроцедуры
	
	#КонецОбласти
	
	#Область СлужебныеПроцедурыИФункции
	
	Процедура ЗаполнитьНаОснованииЗаказаПокупателя(ДанныеЗаполнения)
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	ЗаказПокупателя.Организация КАК Организация,
		|	ЗаказПокупателя.Контрагент КАК Контрагент,
		|	ЗаказПокупателя.Договор КАК Договор,
		|	ЗаказПокупателя.СуммаДокумента КАК СуммаДокумента,
		|	ЗаказПокупателя.Товары.(
		|		Ссылка КАК Ссылка,
		|		Номенклатура КАК Номенклатура,
		|		Количество КАК Количество,
		|		Цена КАК Цена,
		|		Сумма КАК Сумма
		|	) КАК Товары,
		|	ЗаказПокупателя.Услуги.(
		|		Ссылка КАК Ссылка,
		|		НомерСтроки КАК НомерСтроки,
		|		Номенклатура КАК Номенклатура,
		|		Количество КАК Количество,
		|		Цена КАК Цена,
		|		Сумма КАК Сумма
		|	) КАК Услуги
		|ИЗ
		|	Документ.ЗаказПокупателя КАК ЗаказПокупателя
		|ГДЕ
		|	ЗаказПокупателя.Ссылка = &Ссылка";
		
		Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения);
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Если Не Выборка.Следующий() Тогда
			Возврат;
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);
		
		ТоварыОснования = Выборка.Товары.Выбрать();
		Пока ТоварыОснования.Следующий() Цикл
			ЗаполнитьЗначенияСвойств(Товары.Добавить(), ТоварыОснования);
		КонецЦикла;
		
		УслугиОснования = Выборка.Услуги.Выбрать();
		Пока ТоварыОснования.Следующий() Цикл
			ЗаполнитьЗначенияСвойств(Услуги.Добавить(), УслугиОснования);
		КонецЦикла;
		
		Основание = ДанныеЗаполнения;
		
	КонецПроцедуры
	
	Процедура ВКМ_ЗаполнитьНаСервере() Экспорт
		
		РеквизитыДоговора = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Договор, "ВКМ_СуммаАбонентскойПлаты");
		
		СуммаАбонентскойПлаты = РеквизитыДоговора.ВКМ_СуммаАбонентскойПлаты;
		
		ЗначениеКонстантыНомАбонПлата = Константы.ВКМ_НоменклатураАбонентскаяПлата.Получить();
		ЗначениеКонстантыРабСпец = Константы.ВКМ_НоменклатураРаботыСпециалиста.Получить();
		
		Если НЕ ЗначениеЗаполнено(ЗначениеКонстантыНомАбонПлата) ИЛИ НЕ ЗначениеЗаполнено(ЗначениеКонстантыРабСпец) Тогда 
			
			Услуги.Очистить(); 
			
			ОбщегоНазначения.СообщитьПользователю("Не заполнены константы: Абонентская плата или Работа специалиста ");
			
			Возврат;
			
		КонецЕсли; 
		
		Если  ЗначениеЗаполнено(Услуги) Тогда
			Услуги.Очистить();
		КонецЕсли;
		
		Если СуммаАбонентскойПлаты <> 0 Тогда
			
			НоваяСтрокаУслуги = Услуги;
			
			НоваяСтрокаУслуги = Услуги.Добавить();
			НоваяСтрокаУслуги.Номенклатура = ЗначениеКонстантыНомАбонПлата;
			НоваяСтрокаУслуги.Количество = 1;
			НоваяСтрокаУслуги.Цена = Договор.ВКМ_СуммаАбонентскойПлаты;
			НоваяСтрокаУслуги.Сумма = НоваяСтрокаУслуги.Количество * НоваяСтрокаУслуги.Цена;	
			ОбщегоНазначения.СообщитьПользователю("Заполнена сумма абонентской платы, которая составила  "
			+ НоваяСтрокаУслуги.Сумма + " руб.");
			
		КонецЕсли; 
		
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ВКМ_ВыполненныеКлиентуРаботыОстаткиИОбороты.Договор КАК Договор,
		|	ВКМ_ВыполненныеКлиентуРаботыОстаткиИОбороты.КоличествоЧасовОборот КАК КоличествоЧасов,
		|	ВКМ_ВыполненныеКлиентуРаботыОстаткиИОбороты.СуммаКОплатеОборот КАК СуммаКОплате,
		|	ВКМ_ВыполненныеКлиентуРаботыОстаткиИОбороты.Клиент КАК Клиент
		|ИЗ
		|	РегистрНакопления.ВКМ_ВыполненныеКлиентуРаботы.ОстаткиИОбороты(
		|			&НачалоМесяца,
		|			&КонецМесяца,
		|			Месяц,
		|			,
		|			Договор = &Договор
		|				И Клиент = &Клиент) КАК ВКМ_ВыполненныеКлиентуРаботыОстаткиИОбороты";
		
		Запрос.УстановитьПараметр("Договор", Договор);
		Запрос.УстановитьПараметр("Клиент", Контрагент);
		Запрос.УстановитьПараметр("НачалоМесяца", НачалоМесяца(Дата));
		Запрос.УстановитьПараметр("КонецМесяца", КонецМесяца(Дата));
		
		Выборка = Запрос.Выполнить().Выбрать();
		Выборка.Следующий();
		Если ЗначениеЗаполнено(Выборка.СуммаКОплате) И Выборка.СуммаКОплате <> 0 Тогда
			
			НоменклатураРаботыСпециалиста = ЗначениеКонстантыРабСпец;
			НоваяСтрокаУслуги = Услуги.Добавить();
			НоваяСтрокаУслуги.Номенклатура = НоменклатураРаботыСпециалиста;
			НоваяСтрокаУслуги.Количество = Выборка.КоличествоЧасов;
			НоваяСтрокаУслуги.Сумма = Выборка.СуммаКОплате; 
			НоваяСтрокаУслуги.Цена = НоваяСтрокаУслуги.Сумма/НоваяСтрокаУслуги.Количество;
			ОбщегоНазначения.СообщитьПользователю("Заполнена сумма выполненных работ по данному договору, которая составила "
			+ Выборка.СуммаКОплате + " руб.");
		КонецЕсли;
		
	КонецПроцедуры
	
	
	#КонецОбласти
	
#КонецЕсли
