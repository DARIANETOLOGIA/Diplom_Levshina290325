#Область СобытияДокумента

Процедура ОбработкаПроведения(Отказ, РежимПроведения) 
	
	СформироватьДвижения(); 
	
	РассчитатьОклад();  	
	РассчитатьОтпуск(); 
	
	ВзаиморасчетыССотрудниками();
	
	
КонецПроцедуры 

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура СформироватьДвижения() 
	
	СформироватьДвиженияПоОкладу();
	СформироватьДвиженияПрочиеОсновныеНачисления();
	СформироватьДвиженияДополнительныеНачисления();
		
	Движения.ВКМ_ОсновныеНачисления.Записать();
	
КонецПроцедуры 

Процедура СформироватьДвиженияПоОкладу()
	
	Отбор = Новый Структура;
	Отбор.Вставить("ВидРасчета",ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Оклад);
	
	СтрокиОклада = ОсновныеНачисления.НайтиСтроки(Отбор);
	
	Если СтрокиОклада.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	МинимальнаяДатаНачала = СтрокиОклада[0].ДатаНачала;
	МаксимальнаяДатаОкончания = СтрокиОклада[0].ДатаОкончания;
	
	Для Сч = 1 по СтрокиОклада.Количество() - 1 Цикл
		
		Если МинимальнаяДатаНачала > СтрокиОклада[Сч].ДатаНачала Тогда
			МинимальнаяДатаНачала = СтрокиОклада[Сч].ДатаНачала;
		КонецЕсли; 
		
		Если МаксимальнаяДатаОкончания < СтрокиОклада[Сч].ДатаОкончания Тогда
			МаксимальнаяДатаОкончания = СтрокиОклада[Сч].ДатаОкончания;
		КонецЕсли;	 
		
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ВКМ_НачислениеЗаработнойПлатыОсновныеНачисления.Сотрудник КАК Сотрудник,
	|	ВКМ_НачислениеЗаработнойПлатыОсновныеНачисления.Подразделение КАК Подразделение,
	|	ВКМ_НачислениеЗаработнойПлатыОсновныеНачисления.ДатаНачала КАК ДатаНачала,
	|	ВКМ_НачислениеЗаработнойПлатыОсновныеНачисления.ДатаОкончания КАК ДатаОкончания,
	|	ВКМ_НачислениеЗаработнойПлатыОсновныеНачисления.ВидРасчета КАК ВидРасчета,
	|	ВКМ_НачислениеЗаработнойПлатыОсновныеНачисления.ГрафикРаботы КАК ГрафикРаботы
	|ПОМЕСТИТЬ ВТ_ПериодыОкладаИсходные
	|ИЗ
	|	Документ.ВКМ_НачислениеЗаработнойПлаты.ОсновныеНачисления КАК ВКМ_НачислениеЗаработнойПлатыОсновныеНачисления
	|ГДЕ
	|	ВКМ_НачислениеЗаработнойПлатыОсновныеНачисления.Ссылка = &Ссылка
	|	И ВКМ_НачислениеЗаработнойПлатыОсновныеНачисления.ВидРасчета = &Оклад
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВКМ_УсловияОплатыСотрудниковСрезПоследних.Период КАК Период,
	|	ВКМ_УсловияОплатыСотрудниковСрезПоследних.Сотрудник КАК Сотрудник,
	|	ВКМ_УсловияОплатыСотрудниковСрезПоследних.Подразделение КАК Подразделение,
	|	ВКМ_УсловияОплатыСотрудниковСрезПоследних.Оклад КАК Оклад
	|ПОМЕСТИТЬ ВТ_ИзменениеОклада
	|ИЗ
	|	РегистрСведений.ВКМ_УсловияОплатыСотрудников.СрезПоследних(
	|			&МинимальнаяДатаНачала,
	|			(Сотрудник, Подразделение) В
	|				(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|					ВТ_ПериодыОкладаИсходные.Сотрудник КАК Сотрудник,
	|					ВТ_ПериодыОкладаИсходные.Подразделение КАК Подразделение
	|				ИЗ
	|					ВТ_ПериодыОкладаИсходные КАК ВТ_ПериодыОкладаИсходные)) КАК ВКМ_УсловияОплатыСотрудниковСрезПоследних
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВКМ_УсловияОплатыСотрудников.Период,
	|	ВКМ_УсловияОплатыСотрудников.Сотрудник,
	|	ВКМ_УсловияОплатыСотрудников.Подразделение,
	|	ВКМ_УсловияОплатыСотрудников.Оклад
	|ИЗ
	|	РегистрСведений.ВКМ_УсловияОплатыСотрудников КАК ВКМ_УсловияОплатыСотрудников
	|ГДЕ
	|	ВКМ_УсловияОплатыСотрудников.Период > &МинимальнаяДатаНачала
	|	И ВКМ_УсловияОплатыСотрудников.Период <= &МаксимальнаяДатаОкончания
	|	И (ВКМ_УсловияОплатыСотрудников.Сотрудник, ВКМ_УсловияОплатыСотрудников.Подразделение) В
	|			(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|				ВТ_ПериодыОкладаИсходные.Сотрудник КАК Сотрудник,
	|				ВТ_ПериодыОкладаИсходные.Подразделение КАК Подразделение
	|			ИЗ
	|				ВТ_ПериодыОкладаИсходные КАК ВТ_ПериодыОкладаИсходные)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДатаНачала.Период КАК ДатаНачала,
	|	ДатаНачала.Сотрудник КАК Сотрудник,
	|	ДатаНачала.Подразделение КАК Подразделение,
	|	ДатаНачала.Оклад КАК Оклад,
	|	МИНИМУМ(ЕСТЬNULL(ДОБАВИТЬКДАТЕ(ДатаОкончания.Период, СЕКУНДА, -1), ДАТАВРЕМЯ(3999, 12, 31))) КАК ДатаОкончания
	|ПОМЕСТИТЬ ВТ_ИнтервалыОклада
	|ИЗ
	|	ВТ_ИзменениеОклада КАК ДатаНачала
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ИзменениеОклада КАК ДатаОкончания
	|		ПО ДатаНачала.Сотрудник = ДатаОкончания.Сотрудник
	|			И ДатаНачала.Подразделение = ДатаОкончания.Подразделение
	|			И ДатаНачала.Период < ДатаОкончания.Период
	|
	|СГРУППИРОВАТЬ ПО
	|	ДатаНачала.Сотрудник,
	|	ДатаНачала.Оклад,
	|	ДатаНачала.Период,
	|	ДатаНачала.Подразделение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ПериодыОкладаИсходные.Сотрудник КАК Сотрудник,
	|	ВТ_ПериодыОкладаИсходные.Подразделение КАК Подразделение,
	|	ВТ_ПериодыОкладаИсходные.ВидРасчета КАК ВидРасчета,
	|	ВТ_ИнтервалыОклада.Оклад КАК Показатель,
	|	ВЫБОР
	|		КОГДА ВТ_ИнтервалыОклада.ДатаНачала > ВТ_ПериодыОкладаИсходные.ДатаНачала
	|			ТОГДА ВТ_ИнтервалыОклада.ДатаНачала
	|		ИНАЧЕ ВТ_ПериодыОкладаИсходные.ДатаНачала
	|	КОНЕЦ КАК ПериодДействияНачало,
	|	ВЫБОР
	|		КОГДА ВТ_ИнтервалыОклада.ДатаОкончания < ВТ_ПериодыОкладаИсходные.ДатаОкончания
	|			ТОГДА ВТ_ИнтервалыОклада.ДатаОкончания
	|		ИНАЧЕ ВТ_ПериодыОкладаИсходные.ДатаОкончания
	|	КОНЕЦ КАК ПериодДействияКонец,
	|	ВТ_ПериодыОкладаИсходные.ГрафикРаботы КАК ГрафикРаботы
	|ИЗ
	|	ВТ_ПериодыОкладаИсходные КАК ВТ_ПериодыОкладаИсходные
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ИнтервалыОклада КАК ВТ_ИнтервалыОклада
	|		ПО ВТ_ПериодыОкладаИсходные.Сотрудник = ВТ_ИнтервалыОклада.Сотрудник
	|			И ВТ_ПериодыОкладаИсходные.ДатаОкончания >= ВТ_ИнтервалыОклада.ДатаНачала
	|			И ВТ_ПериодыОкладаИсходные.ДатаНачала <= ВТ_ИнтервалыОклада.ДатаОкончания
	|			И ВТ_ПериодыОкладаИсходные.Подразделение = ВТ_ИнтервалыОклада.Подразделение"; 
	
	Запрос.УстановитьПараметр("Оклад", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Оклад);
	Запрос.УстановитьПараметр("МаксимальнаяДатаОкончания", МаксимальнаяДатаОкончания);
	Запрос.УстановитьПараметр("МинимальнаяДатаНачала", МинимальнаяДатаНачала);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Движение = Движения.ВКМ_ОсновныеНачисления.Добавить();
		ЗаполнитьЗначенияСвойств(Движение, Выборка);
		Движение.ПериодРегистрации = Дата; 
		Движение.Показатель = Выборка.Показатель;
		
	КонецЦикла;
	
	
КонецПроцедуры  

Процедура СформироватьДвиженияПрочиеОсновныеНачисления()
	
	Для Каждого Строка Из ОсновныеНачисления Цикл
		
		Если ТипЗнч(Строка.ВидРасчета) <> Тип("ПланВидовРасчетаСсылка.ВКМ_ОсновныеНачисления") Тогда
			Продолжить;
		КонецЕсли; 
		
		Если Строка.ВидРасчета = ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Оклад Тогда
			Продолжить;
		КонецЕсли; 
		
		Движение = Движения.ВКМ_ОсновныеНачисления.Добавить();
		Движение.ПериодРегистрации = Дата;
		Движение.ВидРасчета = Строка.ВидРасчета;
		Движение.ПериодДействияНачало = Строка.ДатаНачала;
		//@skip-check object-not-accessible-concrete-compatiblity-mode
		Движение.ПериодДействияКонец = Строка.ДатаОкончания;	
		Движение.Сотрудник = Строка.Сотрудник;
		Движение.Подразделение = Строка.Подразделение;
		Движение.ГрафикРаботы = Строка.ГрафикРаботы;  
		
		Если Строка.ВидРасчета = ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Отпуск Тогда 
			
			Движение.БазовыйПериодНачало = НачалоМесяца(ДобавитьМесяц(Строка.ДатаНачала, -12));
			Движение.БазовыйПериодКонец = КонецМесяца(ДобавитьМесяц(Строка.ДатаОкончания, -1));
			
		КонецЕсли; 
		
	КонецЦикла;
	
	
КонецПроцедуры

Процедура СформироватьДвиженияДополнительныеНачисления()
	
	
	Для Каждого Строка Из ОсновныеНачисления Цикл
		
		Если ТипЗнч(Строка.ВидРасчета) <> Тип("ПланВидовРасчетаСсылка.ВКМ_ДополнительныеНачисления") Тогда
			Продолжить;
		КонецЕсли; 
		
		Движение = Движения.ВКМ_ДополнительныеНачисления.Добавить();
		Движение.ПериодРегистрации = Дата;
		Движение.ВидРасчета = Строка.ВидРасчета;	
		Движение.Сотрудник = Строка.Сотрудник;
		Движение.Подразделение = Строка.Подразделение;
		
		Если Строка.ВидРасчета = ПланыВидовРасчета.ВКМ_ДополнительныеНачисления.ПремияОтРабот Тогда
			
			Движение.БазовыйПериодНачало = Движение.ПериодРегистрации;
			Движение.БазовыйПериодКонец = КонецМесяца(Движение.ПериодРегистрации);
			
		КонецЕсли; 
		
	КонецЦикла;  
	Движения.ВКМ_ДополнительныеНачисления.Записать();
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВКМ_ДополнительныеНачисления.НомерСтроки КАК НомерСтроки,
	|	ВКМ_ДополнительныеНачисления.Сотрудник КАК Сотрудник,
	|	ЕСТЬNULL(ВКМ_ВыполненныеСотрудникомРаботыОбороты.СуммаКОплатеОборот, 0) КАК СуммаПремии
	|ИЗ
	|	РегистрРасчета.ВКМ_ДополнительныеНачисления КАК ВКМ_ДополнительныеНачисления
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ВКМ_ВыполненныеСотрудникомРаботы.Обороты(&НачалоПериода, &ОкончаниеПериода, , Сотрудник В (&Сотрудник)) КАК ВКМ_ВыполненныеСотрудникомРаботыОбороты
	|		ПО ВКМ_ДополнительныеНачисления.Сотрудник = ВКМ_ВыполненныеСотрудникомРаботыОбороты.Сотрудник
	|ГДЕ
	|	НЕ ВКМ_ВыполненныеСотрудникомРаботыОбороты.Сотрудник ЕСТЬ NULL
	|	И ВКМ_ДополнительныеНачисления.Регистратор = &Ссылка
	|	И ВКМ_ДополнительныеНачисления.ВидРасчета = &ПремияОтРабот";
	
	Запрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(Дата));
	Запрос.УстановитьПараметр("ОкончаниеПериода", КонецМесяца(Дата));
	Запрос.УстановитьПараметр("Сотрудник", ОсновныеНачисления.Выгрузить(,"Сотрудник"));
	Запрос.УстановитьПараметр("ПремияОтРабот", ПланыВидовРасчета.ВКМ_ДополнительныеНачисления.ПремияОтРабот);
	Запрос.УстановитьПараметр("Ссылка", Ссылка); 
	
	Выборка = Запрос.Выполнить().Выбрать(); 
	
	Пока Выборка.Следующий()Цикл 
		
		Движение = Движения.ВКМ_ДополнительныеНачисления[Выборка.НомерСтроки - 1];	
		Движение.Результат = Выборка.СуммаПремии; 
		Движение.Сумма = Движение.Результат - Движение.Результат*13/100;
	КонецЦикла;  	
	
	Движения.ВКМ_ДополнительныеНачисления.Записать(,Истина);
	
КонецПроцедуры

Процедура РассчитатьОклад() 
	Движения.ВКМ_ОсновныеНачисления.Записать(); 
	Запрос = Новый Запрос;
	Запрос.Текст =  "ВЫБРАТЬ
	|	ВКМ_ОсновныеНачисленияДанныеГрафика.НомерСтроки КАК НомерСтроки,
	|	ЕСТЬNULL(ВКМ_ОсновныеНачисленияДанныеГрафика.ЗначениеФактическийПериодДействия, 0) КАК Факт,
	|	ЕСТЬNULL(ВКМ_ОсновныеНачисленияДанныеГрафика.ЗначениеПериодДействия, 0) КАК Норма
	|ИЗ
	|	РегистрРасчета.ВКМ_ОсновныеНачисления.ДанныеГрафика(
	|			ВидРасчета = &Оклад
	|				И Регистратор = &Ссылка) КАК ВКМ_ОсновныеНачисленияДанныеГрафика"; 
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка); 
	Запрос.УстановитьПараметр("Оклад", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Оклад);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Движение = Движения.ВКМ_ОсновныеНачисления[Выборка.НомерСтроки - 1];
		Движение.Результат = Движение.Показатель * Выборка.Факт / Выборка.Норма;
		Движение.ОтработаноДней = Выборка.Факт; 
		Движение.Сумма = Движение.Результат - Движение.Результат*13/100;
		
		Если Движение.Сторно Тогда
			
			Движение.Результат = - Движение.Результат;
			Движение.ОтработаноДней = - Движение.ОтработаноДней;
			
		КонецЕсли;
		
	КонецЦикла;	
	Движения.ВКМ_ОсновныеНачисления.Записать( ,Истина); 	
	
	
КонецПроцедуры

Процедура РассчитатьОтпуск() 
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВКМ_ОсновныеНачисления.НомерСтроки КАК НомерСтроки,
	|	ЕСТЬNULL(ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.ОтработаноДнейБаза, 0) КАК БазаОтработано,
	|	ЕСТЬNULL(ВКМ_ОсновныеНачисленияДанныеГрафика.ЗначениеФактическийПериодДействия, 0) КАК Факт,
	|	ЕСТЬNULL(ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.РезультатБаза, 0) КАК БазаОсн,
	|	ЕСТЬNULL(ВКМ_ДополнительныеНачисления.Результат, 0) КАК БазаДоп,
	|	ВКМ_ОсновныеНачисления.ПериодДействияНачало КАК ДатаНачала,
	|	ВКМ_ОсновныеНачисления.ПериодДействияКонец КАК ДатаКонец
	|ИЗ
	|	РегистрРасчета.ВКМ_ОсновныеНачисления КАК ВКМ_ОсновныеНачисления
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_ОсновныеНачисления.БазаВКМ_ОсновныеНачисления(
	|				&Измерения,
	|				&Измерения,
	|				,
	|				Регистратор = &Ссылка
	|					И ВидРасчета = &Отпуск) КАК ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления
	|		ПО ВКМ_ОсновныеНачисления.НомерСтроки = ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.НомерСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_ОсновныеНачисления.ДанныеГрафика(Регистратор = &Ссылка) КАК ВКМ_ОсновныеНачисленияДанныеГрафика
	|		ПО ВКМ_ОсновныеНачисления.НомерСтроки = ВКМ_ОсновныеНачисленияДанныеГрафика.НомерСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_ДополнительныеНачисления КАК ВКМ_ДополнительныеНачисления
	|		ПО ВКМ_ОсновныеНачисления.Сотрудник = ВКМ_ДополнительныеНачисления.Сотрудник
	|ГДЕ
	|	ВКМ_ОсновныеНачисления.Регистратор = &ССЫЛКА
	|	И ВКМ_ОсновныеНачисления.ВидРасчета = &ОТПУСК"; 
	
	Запрос.УстановитьПараметр("ССЫЛКА", Ссылка);			   
	Запрос.УстановитьПараметр("ОТПУСК", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Отпуск);
	
	
	Измерения = Новый Массив;
	Измерения.Добавить("Сотрудник");
	Измерения.Добавить("Подразделение");
	
	Запрос.УстановитьПараметр("Измерения", Измерения);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл  
		
		Движение = Движения.ВКМ_ОсновныеНачисления[Выборка.НомерСтроки - 1];
		
		Если Выборка.БазаОтработано = 0 Тогда
			Движение.Результат = 0;  
			Продолжить;
		КонецЕсли;
		
		ДнейВОтпуске = День(Выборка.ДатаКонец) - День(Выборка.ДатаНачала) + 1; 
		
		Движение.Результат = (Выборка.БазаОсн + Выборка.БазаДоп) * ДнейВОтпуске / Выборка.БазаОтработано;
		Движение.ОтработаноДней = ДнейВОтпуске;
		Движение.Сумма = Движение.Результат-Движение.Результат*13/100;
		
		Если Движение.Сторно Тогда
			
			Движение.Результат = - Движение.Результат;
			Движение.ОтработаноДней = - Движение.ОтработаноДней;     
			
		КонецЕсли;		
		
	КонецЦикла;
	
	Движения.ВКМ_ОсновныеНачисления.Записать(, Истина);
	
КонецПроцедуры 

Процедура ВзаиморасчетыССотрудниками()
	
	
	Движения.ВКМ_ВзаиморасчетыССотрудниками.Записывать = Истина;
	Движения.ВКМ_ВзаиморасчетыССотрудниками.Записать();
		
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ВКМ_ОсновныеНачисления.ПериодРегистрации КАК ПериодРегистрации,
	|	ВКМ_ОсновныеНачисления.Сотрудник КАК Сотрудник,
	|	ВКМ_ОсновныеНачисления.Подразделение КАК Подразделение,
	|	СУММА(ВКМ_ОсновныеНачисления.Результат) КАК Результат,
	|	ВКМ_ОсновныеНачисления.Сумма КАК Сумма
	|ИЗ
	|	РегистрРасчета.ВКМ_ОсновныеНачисления КАК ВКМ_ОсновныеНачисления
	|ГДЕ
	|	ВКМ_ОсновныеНачисления.Регистратор = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ВКМ_ОсновныеНачисления.Сотрудник,
	|	ВКМ_ОсновныеНачисления.ПериодРегистрации,
	|	ВКМ_ОсновныеНачисления.Подразделение,
	|	ВКМ_ОсновныеНачисления.Сумма
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВКМ_ДополнительныеНачисления.ПериодРегистрации,
	|	ВКМ_ДополнительныеНачисления.Сотрудник,
	|	ВКМ_ДополнительныеНачисления.Подразделение,
	|	СУММА(ВКМ_ДополнительныеНачисления.Результат),
	|	NULL
	|ИЗ
	|	РегистрРасчета.ВКМ_ДополнительныеНачисления КАК ВКМ_ДополнительныеНачисления
	|ГДЕ
	|	ВКМ_ДополнительныеНачисления.Регистратор = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ВКМ_ДополнительныеНачисления.Сотрудник,
	|	ВКМ_ДополнительныеНачисления.ПериодРегистрации,
	|	ВКМ_ДополнительныеНачисления.Подразделение";
	
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Движение = Движения.ВКМ_ВзаиморасчетыССотрудниками.Добавить();
			
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		Движение.Период = Дата;
		Движение.Сотрудник = Выборка.Сотрудник;
		Движение.Сумма = Выборка.Результат-Выборка.Результат*13/100;		
	КонецЦикла;
	
	Движения.ВКМ_ВзаиморасчетыССотрудниками.Записывать = Истина;
	
КонецПроцедуры

#КонецОбласти
